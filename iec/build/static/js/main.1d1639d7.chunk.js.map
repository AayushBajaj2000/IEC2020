{"version":3,"sources":["StateProvider.js","firebase.js","mainComponents/menu.js","Barcode.js","MainPage.js","CurrentPoints.js","BuyItems.js","MyAccount.js","App.js","reducer.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","MainMenu","history","useHistory","user","dispatch","useState","actv","open1","setOpen1","open2","setOpen2","name","setName","email","setEmail","password","setPassword","headings","link","map","label","to","Menu","Item","active","pointing","secondary","color","inverted","position","onClick","type","item","push","Modal","onClose","onOpen","open","className","Header","Content","Description","Input","placeholder","onChange","e","data","Actions","Button","primary","content","labelPosition","icon","event","preventDefault","createUserWithEmailAndPassword","then","bc_number","Math","floor","random","collection","doc","toString","set","Email","Total_Credit","Total_Points","Barcode_Number","console","log","catch","error","alert","message","signInWithEmailAndPassword","get","querySnapshot","forEach","Barcode","require","style","textAlign","MainPage","CurrentPoints","credit","points","Grid","container","Row","Card","Meta","Progress","warning","total","progress","BuyItems","mapItems","list","price","extra","purchase","usr","newPoints","update","UsePoints","columns","Group","MyAccount","funds","setFunds","card","setCard","expire","setExpire","ccv","setCcv","Container","Form","Field","newFunds","parseFloat","val","App","exact","path","backgroundImage","state","action","barcode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d1639d7.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\n//The data layer\r\nexport const StateContext = createContext();\r\n\r\n//Build a provider to wrap the app to give acces to the data layer\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import firebase from \"firebase\";\r\n\r\n// the firebaseApp for the initialization of the firebase\r\nconst firebaseApp = firebase.initializeApp({\r\n\r\n    apiKey: \"AIzaSyDdeFoYKvlcEWfdzifzo6ejdJmD8VCxANA\",\r\n    authDomain: \"contactless-payments-b6ea7.firebaseapp.com\",\r\n    projectId: \"contactless-payments-b6ea7\",\r\n    storageBucket: \"contactless-payments-b6ea7.appspot.com\",\r\n    messagingSenderId: \"1078152858804\",\r\n    appId: \"1:1078152858804:web:4d518bfbeb8f63aae71be1\",\r\n    measurementId: \"G-HCCWYXMV1B\"\r\n\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\nexport { db, auth, storage };","import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { Menu, Button, Modal, Input } from 'semantic-ui-react';\r\nimport { db, auth } from '../firebase';\r\nimport '../index.css';\r\n\r\nfunction MainMenu() {\r\n\r\n    // The variable which will be used to navigate to diferent pages \r\n    let history = useHistory();\r\n    // Menu options for the semantic ui navbar\r\n    const menuOpt = [\r\n        { name: 'Home', link: \"/\" },\r\n    ];\r\n    // Getting the user and the dispatch function from the stateprovider or ContextAPI\r\n    const [{ user }, dispatch] = useStateValue();\r\n    // Used for semantic-ui navbar to show which tab is active\r\n    const [actv, setActv] = useState(\"Home\");\r\n    // Used for opening the modal for the signup\r\n    const [open1, setOpen1] = useState(false);\r\n    // Used for opening the modal for the login\r\n    const [open2, setOpen2] = useState(false);\r\n    // Used for getting their name from the input\r\n    const [name, setName] = useState(\"\");\r\n    // Used for getting their email from the input\r\n    const [email, setEmail] = useState(\"\");\r\n    // Used for getting their password from the input\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    // Function for opening the modal for signup\r\n    const handleOpen1 = () => {\r\n        setOpen1(true)\r\n    }\r\n    // Function for opening the modal for the login\r\n    const handleOpen2 = () => {\r\n        setOpen2(true)\r\n    }\r\n    // Function for handling the signup\r\n    const handleSignup = (event) => {\r\n        // preventing the refresh when we click the login button\r\n        event.preventDefault();\r\n        // Firebase function for creating a user with the email and the password that they entered\r\n        auth.createUserWithEmailAndPassword(email.value, password.value)\r\n            .then((user) => {\r\n                // Now the user is created\r\n                // The random barcode generated which will be used by Barcode.js to generate a barcode\r\n                var bc_number = Math.floor(Math.random() * 1000000000);\r\n                // Adding the user with all their information to the firebase database  \r\n                db.collection(\"Accounts\").doc(bc_number.toString()).set({\r\n                    name: name.value,\r\n                    Email: email.value,\r\n                    Total_Credit: 0,\r\n                    Total_Points: 0,\r\n                    Barcode_Number: bc_number\r\n                })\r\n                    .then(function () {\r\n                        //The user is added successfully\r\n                        console.log(\"User successfully added!\");\r\n                        //Adding the user with their information to the stateprovider\r\n                        dispatch({\r\n                            type: \"Add_user\",\r\n                            item: {\r\n                                name: name.value,\r\n                                Email: email.value,\r\n                                Total_Credit: 0,\r\n                                Total_Points: 0,\r\n                                Barcode_Number: bc_number\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(function (error) {\r\n                        // If there is an error in adding the user\r\n                        console.error(\"Error in adding the user to the database: \", error);\r\n                    });\r\n            })\r\n            .catch((error) => {\r\n                // If there is an error in creating the user\r\n                alert(\"Error in creating the user : \", error.message);\r\n            });\r\n        // closing the modal\r\n        setOpen1(false);\r\n    }\r\n\r\n    // Handling the logout for the user\r\n    const handleLogout = () => {\r\n        // Setting the user to null in the stateprovider which changes what is rendered\r\n        dispatch({\r\n            type: \"Add_user\",\r\n            item: null\r\n        });\r\n        dispatch({\r\n            type: \"Add_credit\",\r\n            item: 0\r\n        });\r\n        dispatch({\r\n            type: \"Add_points\",\r\n            item: 0\r\n        });\r\n        // Go to the main page when the user has logged out\r\n        history.push(\"./\");\r\n    }\r\n\r\n    //  Handling the signin for the user\r\n    const handleSignin = (event) => {\r\n        // Preventing the default behaviour of the button\r\n        event.preventDefault();\r\n        // Signing the user in using firebase authentication\r\n        auth.signInWithEmailAndPassword(email.value, password.value)\r\n            .then((user) => {\r\n                // The user is signed in\r\n                // Getting the users information from the database according to their email\r\n                db.collection(\"Accounts\")\r\n                    .get()\r\n                    .then(function (querySnapshot) {\r\n                        // Looping through each document \r\n                        querySnapshot.forEach(function (doc) {\r\n                            // doc.data() is never undefined for query doc snapshots\r\n                            //Checking if the email the user entered is the same as their email in the database to get their information\r\n                            if (doc.data().Email === email.value) {\r\n                                // Adding the object which contains all the information about the user to the stateprovider\r\n                                dispatch({\r\n                                    type: \"Add_user\",\r\n                                    item: doc.data()\r\n                                });\r\n                                // Adding the total credit that the user has to the stateprovider\r\n                                dispatch({\r\n                                    type: \"Add_credit\",\r\n                                    item: doc.data().Total_Credit\r\n                                });\r\n                                // Adding the total points that the user has to the stateprovider\r\n                                dispatch({\r\n                                    type: \"Add_points\",\r\n                                    item: doc.data().Total_Points\r\n                                });\r\n                            }\r\n                        });\r\n                        //Closing the login modal\r\n                        setOpen2(false);\r\n                        // Setting the password and email to be null \r\n                        setEmail(\"\");\r\n                        setPassword(\"\");\r\n                    })\r\n                    .catch(function (error) {\r\n                        // We can not get the documents from the database\r\n                        console.log(\"Error getting documents: \", error);\r\n                    });\r\n            })\r\n            .catch((error) => {\r\n                // If the user has entered any wrong email or password then they get a message\r\n                alert(error.message);\r\n            });\r\n    }\r\n    // headings function which we use to display the navbar links at the start\r\n    const headings = menuOpt.map(label => (\r\n        <Link to={label.link}>\r\n            <Menu.Item\r\n                name={label.name}\r\n                active={actv === label.name}\r\n            />\r\n        </Link>\r\n    ));\r\n    // returns the rendered component\r\n    return (\r\n        <div>\r\n            {/*Menu component from semantic-ui*/}\r\n            <Menu pointing secondary color={'blue'} inverted>\r\n                {/* Displaying the headings */}\r\n                {headings}\r\n                {/* Displaying the navbar position on the right */}\r\n                <Menu.Menu position='right'>\r\n                    <Link to={\"/myaccount\"}>\r\n                        {\r\n                            user !== null ?\r\n                                <Menu.Item\r\n                                    name='My Account'\r\n                                    active={actv === 'My Account'}\r\n                                />\r\n                                : null\r\n                        }\r\n                    </Link>\r\n                    {\r\n                        user === null ?\r\n                            <Menu.Item\r\n                                name={\"Login\"}\r\n                                active={actv === 'Login'}\r\n                                onClick={handleOpen2}\r\n                            /> :\r\n                            <Menu.Item\r\n                                name={'Logout'}\r\n                                active={actv === 'Logout'}\r\n                                onClick={handleLogout}\r\n                            />\r\n                    }\r\n                    <Menu.Item\r\n                        name={\"Signup\"}\r\n                        active={actv === 'Signup'}\r\n                        onClick={handleOpen1}\r\n                    />\r\n                </Menu.Menu>\r\n            </Menu>\r\n            {/* Modal for the signup*/}\r\n            <Modal\r\n                onClose={() => setOpen1(false)}\r\n                onOpen={() => setOpen1(true)}\r\n                open={open1}\r\n                className=\"modal__login\"\r\n            >\r\n                <Modal.Header className=\"modal__heading\">Sign Up </Modal.Header>\r\n                <Modal.Content>\r\n                    <Modal.Description>\r\n                        <div className=\"modal__main\">\r\n                            <label className=\"modal__label\">Name</label>\r\n                            <Input placeholder='Name' value={name.value} onChange={(e, data) => setName(data)} />\r\n                            <br /> <br />\r\n                            <label className=\"modal__label\">Email</label>\r\n                            <Input placeholder='Email' value={email.value} onChange={(e, data) => setEmail(data)} />\r\n                            <br /> <br />\r\n                            <label className=\"modal__label\">Password</label>\r\n                            <Input placeholder='password' type=\"password\" value={password.value} onChange={(e, data) => setPassword(data)} />\r\n                        </div>\r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button\r\n                        primary\r\n                        content=\"Signup\"\r\n                        labelPosition='right'\r\n                        icon='checkmark'\r\n                        onClick={handleSignup}\r\n                    />\r\n                </Modal.Actions>\r\n            </Modal>\r\n            {/* Modal for the signin*/}\r\n            <Modal\r\n                onClose={() => setOpen2(false)}\r\n                onOpen={() => setOpen2(true)}\r\n                open={open2}\r\n                className=\"modal__login\"\r\n            >\r\n                <Modal.Header className=\"modal__heading\">Login</Modal.Header>\r\n                <Modal.Content>\r\n                    <Modal.Description>\r\n                        <div className=\"modal__main\">\r\n                            <label className=\"modal__label\">Email</label>\r\n                            <Input placeholder='Email' value={email.value} onChange={(e, data) => setEmail(data)} />\r\n                            <br /> <br />\r\n                            <label className=\"modal__label\">Password</label>\r\n                            <Input placeholder='password' type=\"password\" value={password.value} onChange={(e, data) => setPassword(data)} />\r\n                        </div>\r\n                    </Modal.Description>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button\r\n                        primary\r\n                        content=\"Login\"\r\n                        labelPosition='right'\r\n                        icon='checkmark'\r\n                        onClick={handleSignin}\r\n                    />\r\n                </Modal.Actions>\r\n            </Modal>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default MainMenu;","import React from 'react';\r\nimport { useStateValue } from \"./StateProvider\"\r\nimport \"./index.css\";\r\n\r\nfunction Barcode() {\r\n\r\n    var Barcode = require('react-barcode');\r\n    const [{ user }] = useStateValue();\r\n\r\n    return (\r\n        <div>\r\n            <p style={{ textAlign: \"center\" }}>Please show the barcode given below to the cashier so that they can help you with the purchase</p>\r\n            <div className=\"barcode__container\">\r\n                <Barcode value={user?.Barcode_Number} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Barcode\r\n","import React from 'react'\r\nimport \"./MainPage.css\";\r\n\r\nfunction MainPage() {\r\n    return (\r\n        <div className=\"main\">\r\n            <h1>Welcome to OntechU's Contactless payments</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage\r\n","import React from 'react';\r\nimport { Card, Progress, Grid } from 'semantic-ui-react';\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport \"./index.css\";\r\n\r\n//displays the types of things you can get and pts and credit available\r\nexport default function CurrentPoints() {\r\n    const [{ credit, points }] = useStateValue();\r\n    return (\r\n        <Grid container>\r\n            <Grid.Row className=\"points__container\">\r\n                <Card>\r\n                    <Card.Content>\r\n                        <div >\r\n                            <Card.Header>Points Available</Card.Header>\r\n                            <Card.Meta>1pt = $5</Card.Meta>\r\n                            <Card.Description>\r\n                                <Progress warning total='30' value={points} progress='ratio' />\r\n                                <h5>Trade is points for Items\r\n                                    <ul>\r\n                                        <li>10pts for Small Priced Item (ex: mug, pencils, stationary)</li>\r\n                                        <li>20pts for Medium Priced Item (ex: clothes, scientific calculators)</li>\r\n                                        <li>30pts for Large Priced Item (ex: textbooks)</li>\r\n                                    </ul>\r\n                                </h5>\r\n                            </Card.Description>\r\n                        </div>\r\n                    </Card.Content>\r\n                </Card>\r\n            </Grid.Row>\r\n            <Grid.Row className=\"points__container\">\r\n                <Card>\r\n                    <Card.Content>\r\n                        <Card.Header>Credit Available</Card.Header>\r\n                        <Card.Description>\r\n                            <h5>${credit}</h5>\r\n                        </Card.Description>\r\n                    </Card.Content>\r\n                </Card>\r\n            </Grid.Row >\r\n        </Grid >\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Card, Button, Grid } from 'semantic-ui-react';\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { db } from './firebase';\r\n\r\nexport default function BuyItems() {\r\n\r\n    const [{ user, points }, dispatch] = useStateValue();\r\n    const smallTier = [{ item: \"Pencil\", price: 5 }, { item: \"Calculator\", price: 5 }, { item: \"Mug\", price: 5 }];\r\n    const medTier = [{ item: \"T-shirt\", price: 15 }, { item: \"Lab Coat\", price: 12 }, { item: \"Backpack\", price: 14 }];\r\n    const lgTier = [{ item: \"Calculus Textbook\", price: 25 }, { item: \"Physics Textbook\", price: 28 }, { item: \"UOIT x Adidas Clothing\", price: 30 }];\r\n\r\n    const UsePoints = (purchase) => {\r\n        //get the user's points\r\n        let usr = db.collection(\"Accounts\").doc(user?.Barcode_Number.toString());\r\n\r\n        if (purchase > points) {\r\n            alert(\"Insufficient points\");\r\n        }\r\n        else {\r\n            let newPoints = points - purchase;\r\n            if (newPoints > 0) {\r\n                //update account\r\n                usr.update({\r\n                    Total_Points: newPoints\r\n                }).then(() => {\r\n                    console.log(\"Updated pts\");\r\n                });\r\n            }\r\n            dispatch({\r\n                type: \"Add_points\",\r\n                item: newPoints\r\n            });\r\n        }\r\n    }\r\n\r\n    const mapItems = (list) => {\r\n        return list.map(item => (\r\n            <Card>\r\n                <Card.Content>\r\n                    <Card.Header>{item.item}</Card.Header>\r\n                    <Card.Description>{item.price}pts</Card.Description>\r\n                </Card.Content>\r\n                <Card.Content extra>\r\n                    <div className='ui buttons'>\r\n                        <Button color='green' onClick={() => UsePoints(item.price)}>Use Points</Button>\r\n                    </div>\r\n                </Card.Content>\r\n            </Card>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <Grid container columns={3}>\r\n            <Grid.Row><h3>Small Priced Items</h3></Grid.Row>\r\n            <Grid.Row>\r\n                <Card.Group >\r\n                    {mapItems(smallTier)}\r\n                </Card.Group>\r\n            </Grid.Row>\r\n            <Grid.Row><h3>Medium Priced Items</h3></Grid.Row>\r\n            <Grid.Row>\r\n                <Card.Group >\r\n                    {mapItems(medTier)}\r\n                </Card.Group>\r\n            </Grid.Row>\r\n            <Grid.Row><h3>Large Priced Items</h3></Grid.Row>\r\n            <Grid.Row>\r\n                <Card.Group >\r\n                    {mapItems(lgTier)}\r\n                </Card.Group>\r\n            </Grid.Row>\r\n        </Grid >\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Card, Container, Button, Form, Input } from 'semantic-ui-react';\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { db } from './firebase';\r\nimport \"./MyAccount.css\";\r\n\r\n// The component function for the Myaccount\r\n\r\nexport default function MyAccount() {\r\n\r\n    // functions for the myaccount\r\n    const [{ user, credit, points }, dispatch] = useStateValue();\r\n    const [funds, setFunds] = useState(0);\r\n    const [name, setName] = useState('');\r\n    const [card, setCard] = useState('');\r\n    const [expire, setExpire] = useState('');\r\n    const [ccv, setCcv] = useState('');\r\n\r\n    const handleName = (val) => {\r\n        setName(val);\r\n    }\r\n    const handleCard = (val) => {\r\n        setCard(val);\r\n    }\r\n    const handleExpire = (val) => {\r\n        setExpire(val);\r\n    }\r\n    const handleCcv = (val) => {\r\n        setCcv(val);\r\n    }\r\n\r\n    //update account\r\n    let usr = db.collection(\"Accounts\").doc(user?.Barcode_Number.toString());\r\n    console.log(usr);\r\n\r\n    // ADD FUNDS TO CREDIT\r\n    const handleAddFundsSubmit = () => {\r\n        if (funds.value > 0) {\r\n            let newFunds = parseFloat(credit) + parseFloat(funds.value);\r\n            usr.update({\r\n                Total_Credit: newFunds\r\n            }).then(() => {\r\n                console.log(\"Updated funds\");\r\n            });\r\n            dispatch({\r\n                type: \"Add_credit\",\r\n                item: newFunds\r\n            });\r\n            setFunds(0);\r\n        } else {\r\n            alert(\"Please input the right amount\");\r\n        }\r\n\r\n    }\r\n\r\n    const handleAddCardSubmit = () => {\r\n        setName('');\r\n        setCard('');\r\n        setExpire('');\r\n        setCcv('');\r\n        console.log(\"Added Cards\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"center\">\r\n            <Container>\r\n                <Card>\r\n                    <Card.Content>\r\n                        <Card.Header>Name</Card.Header>\r\n                        <Card.Description>{user?.name}</Card.Description>\r\n                    </Card.Content>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Content>\r\n                        <Card.Header>Email</Card.Header>\r\n                        <Card.Description>{user?.Email}</Card.Description>\r\n                    </Card.Content>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Content>\r\n                        <Card.Header>Points Available</Card.Header>\r\n                        <Card.Description>{points}</Card.Description>\r\n                    </Card.Content>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Content>\r\n                        <Card.Header>Add Funds</Card.Header>\r\n                        <Card.Meta>{credit}</Card.Meta>\r\n                        <Card.Description>\r\n                            <Form>\r\n                                <Form.Field>\r\n                                    <label>Amount $</label><Input value={funds.value} onChange={(e, data) => setFunds(data)} />\r\n                                </Form.Field>\r\n                            </Form>\r\n                        </Card.Description>\r\n                    </Card.Content>\r\n                    <Card.Content extra>\r\n                        <Button onClick={handleAddFundsSubmit} primary>Add Funds</Button>\r\n                    </Card.Content>\r\n                </Card>\r\n                <Card>\r\n                    <Card.Content>\r\n                        <Card.Header>Enter Payment Info</Card.Header>\r\n                        <Card.Description>\r\n                            <Form>\r\n                                <Form.Field>\r\n                                    <label>Card Holder Name</label><input value={name.value} onChange={handleName} />\r\n                                </Form.Field>\r\n                                <Form.Field>\r\n                                    <label>Card Number</label><input value={card.value} onChange={handleCard} />\r\n                                </Form.Field>\r\n                                <Form.Field>\r\n                                    <label>CCV</label><input value={ccv.value} onChange={handleCcv} />\r\n                                </Form.Field>\r\n                                <Form.Field>\r\n                                    <label>Expiry Date 'mm/yy'</label><input value={expire.value} onChange={handleExpire} />\r\n                                </Form.Field>\r\n                            </Form>\r\n                        </Card.Description>\r\n                    </Card.Content>\r\n                    <Card.Content extra>\r\n                        <Button onClick={handleAddCardSubmit} primary>Add Card</Button>\r\n                    </Card.Content>\r\n                </Card>\r\n            </Container >\r\n        </div >\r\n    );\r\n\r\n}","import { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport MainMenu from './mainComponents/menu';\r\nimport Barcode from \"./Barcode\";\r\nimport MainPage from \"./MainPage\";\r\nimport CurrentPoints from './CurrentPoints';\r\nimport BuyItems from './BuyItems';\r\nimport MyAccount from './MyAccount';\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction App() {\r\n  const [{ user }] = useStateValue();\r\n\r\n  return (\r\n    <Router>\r\n      <MainMenu />\r\n      <Switch>\r\n        <Route exact path='/'>\r\n          {\r\n            user !== null ?\r\n              <div style={{\r\n                backgroundImage: `url(uoit.png)`\r\n              }}>\r\n                <Barcode />\r\n                <CurrentPoints />\r\n                <BuyItems />\r\n              </div>\r\n              :\r\n              <MainPage />\r\n          }\r\n        </Route>\r\n        <Route exact path='/myaccount'>\r\n          {\r\n            user == null ? <MainPage /> : <MyAccount />\r\n          }\r\n        </Route>\r\n\r\n        <Route path='/:x' exact>\r\n          <div>\r\n            <p>404 Page not found</p>\r\n          </div>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// InitialState which is the initialState for all the components\r\nexport const initialState = {\r\n  user: null,\r\n  credit: 0,\r\n  points: 0,\r\n  barcode: 0\r\n};\r\n\r\n// This is the component that is used to get the state in all the components in react \r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"Add_user\":\r\n      return {\r\n        ...state,\r\n        user: action.item\r\n      };\r\n    case \"Add_credit\":\r\n      return {\r\n        ...state,\r\n        credit: action.item\r\n      };\r\n    case \"Add_points\":\r\n      return {\r\n        ...state,\r\n        points: action.item\r\n      };\r\n    case \"Add_barcode\":\r\n      return {\r\n        ...state,\r\n        barcode: action.item\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { StateProvider } from \"./StateProvider\";\r\nimport reducer, { initialState } from \"./reducer\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <StateProvider initialState={initialState} reducer={reducer}>\r\n        <App />\r\n      </StateProvider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}